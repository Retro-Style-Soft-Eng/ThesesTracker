{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ThesesTracker\\\\thesis-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from \"./lib/helper/supabaseClient.js\";\nimport Login from './login/Login.jsx';\nimport AdminLogin from './login/AdminLogin.jsx';\nimport StudentLogin from './login/StudentLogin.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(null);\n  useEffect(() => {\n    // Function to fetch role from PostgreSQL based on userID\n    const fetchUserRole = async userId => {\n      var _data$;\n      const {\n        data,\n        error\n      } = await supabase.from('user_roles') // SQL Table name\n      .select('role') // the uhhhh table component containing the roles\n      .eq('user_id', userId);\n      if (error) {\n        console.error('Error fetching role:', error);\n        return null;\n      }\n      return (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.role; // Assuming only one role per user\n    };\n    const getUser = async () => {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (user) {\n        //check if using institutional email\n        if (!user.email.endsWith(\"@neu.edu\")) {} else {\n          setUser(user);\n          // Fetch role from the database (PostgreSQL)\n          const userRole = await fetchUserRole(user.id);\n          setRole(userRole);\n        }\n      }\n    };\n    getUser();\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n      if (session !== null && session !== void 0 && session.user) {\n        fetchUserRole(session.user.id).then(setRole); // Fetch role on session change\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n  const logout = async () => {\n    await supabase.auth.signOut();\n    setUser(null);\n    setRole(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: role ? role === \"admin\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AdminLogin, {\n          logout: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this) :\n      /*#__PURE__*/\n      // imma change this later to librarian role so ignore it for now\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(StudentLogin, {\n          logout: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this) :\n      /*#__PURE__*/\n      // If no role assigned, default to StudentLogin\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(StudentLogin, {\n          logout: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iTY3qP3pH2KEmGVhPeeHSfaPq48=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Login","AdminLogin","StudentLogin","jsxDEV","_jsxDEV","App","_s","user","setUser","role","setRole","fetchUserRole","userId","_data$","data","error","from","select","eq","console","getUser","auth","email","endsWith","userRole","id","subscription","onAuthStateChange","_event","session","then","unsubscribe","logout","signOut","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ThesesTracker/thesis-app/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from \"./lib/helper/supabaseClient.js\";\r\nimport Login from './login/Login.jsx';\r\nimport AdminLogin from './login/AdminLogin.jsx';\r\nimport StudentLogin from './login/StudentLogin.jsx';\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(null);\r\n  const [role, setRole] = useState(null);\r\n\r\n  useEffect(() => {\r\n    \r\n    // Function to fetch role from PostgreSQL based on userID\r\n    const fetchUserRole = async (userId) => {\r\n      const { data, error } = await supabase\r\n        .from('user_roles') // SQL Table name\r\n        .select('role') // the uhhhh table component containing the roles\r\n        .eq('user_id', userId);\r\n\r\n      if (error) {\r\n        console.error('Error fetching role:', error);\r\n        return null;\r\n      }\r\n\r\n      return data[0]?.role; // Assuming only one role per user\r\n    };\r\n\r\n    const getUser = async () => {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (user) {\r\n\r\n        //check if using institutional email\r\n        if(!user.email.endsWith(\"@neu.edu\")){\r\n          \r\n        }\r\n        else{\r\n          setUser(user);\r\n          // Fetch role from the database (PostgreSQL)\r\n          const userRole = await fetchUserRole(user.id);\r\n          setRole(userRole);\r\n        } \r\n      }\r\n    };\r\n\r\n    getUser();\r\n\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\r\n      setUser(session?.user || null);\r\n      if (session?.user) {\r\n        fetchUserRole(session.user.id).then(setRole); // Fetch role on session change\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const logout = async () => {\r\n    await supabase.auth.signOut();\r\n    setUser(null);\r\n    setRole(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        {user ? (\r\n          <div>\r\n            {role ? (\r\n              role === \"admin\" ? (\r\n                <div>\r\n                  <AdminLogin logout={logout}/>\r\n                </div>\r\n              ) : ( // imma change this later to librarian role so ignore it for now\r\n                <div>\r\n                  <StudentLogin logout={logout}/>\r\n                </div>\r\n              )\r\n            ) : ( // If no role assigned, default to StudentLogin\r\n              <div>\r\n                <StudentLogin logout={logout}/>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Login/>\r\n          </div>\r\n        )}\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}