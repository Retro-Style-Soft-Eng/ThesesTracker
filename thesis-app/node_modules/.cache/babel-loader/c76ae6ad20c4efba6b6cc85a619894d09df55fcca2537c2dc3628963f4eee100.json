{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ThesesTracker\\\\thesis-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from \"./lib/helper/supabaseClient.js\";\nimport LoginPage from './login/Login.jsx';\nimport Login from './login/Login.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _user$user_metadata;\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(null);\n  useEffect(() => {\n    // Function to fetch role from PostgreSQL based on user ID\n    const fetchUserRole = async userId => {\n      var _data$;\n      const {\n        data,\n        error\n      } = await supabase.from('user_roles') // Replace with your actual table name\n      .select('role').eq('user_id', userId);\n      if (error) {\n        console.error('Error fetching role:', error);\n        return null;\n      }\n      return (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.role; // Assuming only one role per user\n    };\n    getUser();\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      var _session$user, _session$user$app_met;\n      setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n      setRole(session === null || session === void 0 ? void 0 : (_session$user = session.user) === null || _session$user === void 0 ? void 0 : (_session$user$app_met = _session$user.app_metadata) === null || _session$user$app_met === void 0 ? void 0 : _session$user$app_met.role); // Update role on session change\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n  const login = async () => {\n    await supabase.auth.signInWithOAuth({\n      provider: \"google\"\n    });\n  };\n  const logout = async () => {\n    await supabase.auth.signOut();\n    setUser(null);\n    setRole(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", ((_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.name) || \"User\", \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), role && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your role: \", role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iTY3qP3pH2KEmGVhPeeHSfaPq48=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","supabase","LoginPage","Login","jsxDEV","_jsxDEV","App","_s","_user$user_metadata","user","setUser","role","setRole","fetchUserRole","userId","_data$","data","error","from","select","eq","console","getUser","subscription","auth","onAuthStateChange","_event","session","_session$user","_session$user$app_met","app_metadata","unsubscribe","login","signInWithOAuth","provider","logout","signOut","children","user_metadata","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/ThesesTracker/thesis-app/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from \"./lib/helper/supabaseClient.js\";\r\nimport LoginPage from './login/Login.jsx';\r\nimport Login from './login/Login.jsx';\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(null);\r\n  const [role, setRole] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch role from PostgreSQL based on user ID\r\n    const fetchUserRole = async (userId) => {\r\n      const { data, error } = await supabase\r\n        .from('user_roles') // Replace with your actual table name\r\n        .select('role')\r\n        .eq('user_id', userId);\r\n\r\n      if (error) {\r\n        console.error('Error fetching role:', error);\r\n        return null;\r\n      }\r\n\r\n      return data[0]?.role; // Assuming only one role per user\r\n    };\r\n\r\n\r\n    getUser();\r\n  \r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\r\n      setUser(session?.user || null);\r\n      setRole(session?.user?.app_metadata?.role); // Update role on session change\r\n    });\r\n  \r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const login = async () => {\r\n    await supabase.auth.signInWithOAuth({\r\n      provider: \"google\",\r\n    });\r\n  };\r\n\r\n  const logout = async () => {\r\n    await supabase.auth.signOut();\r\n    setUser(null);\r\n    setRole(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <div>\r\n          <p>Welcome, {user.user_metadata?.name || \"User\"}!</p>\r\n          {role && <p>Your role: {role}</p>} {/* Display role */}\r\n          <button onClick={logout}>Logout</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Login />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}